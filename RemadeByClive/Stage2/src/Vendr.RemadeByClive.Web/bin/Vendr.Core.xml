<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vendr.Core</name>
    </assembly>
    <members>
        <member name="M:Vendr.Core.Adapters.IProductAdapter.GetProductSnapshot(System.String,System.String)">
            <summary>
            Get a product snapshot for the supplied product reference in the given culture.
            </summary>
            <param name="productReference">The product reference of the product</param>
            <param name="languageIsoCode">The language ISO code of the culture</param>
            <returns></returns>
        </member>
        <member name="M:Vendr.Core.Adapters.IProductAdapter.GetProductSnapshot(System.String,System.String,System.String)">
            <summary>
            Get a product snapshot for the supplied product reference in the given culture.
            </summary>
            <param name="productReference">The product reference of the product</param>
            <param name="productVariantReference">The product variant reference of the product</param>
            <param name="languageIsoCode">The language ISO code of the culture</param>
            <returns></returns>
        </member>
        <member name="M:Vendr.Core.Adapters.IProductAdapter.TryGetProductReference(System.Guid,System.String,System.String@,System.String@)">
            <summary>
            Try and get the product reference for the given SKU in the given store.
            </summary>
            <param name="storeId">The id of the store to search in</param>
            <param name="sku">The SKU of the product to search for</param>
            <param name="productReference">The product reference of the found product, or null</param>
            <param name="productVariantReference">The product variant reference of the found product, or null</param>
            <returns>Boolean indicating whether a product reference was found for the given SKU</returns>
        </member>
        <member name="T:Vendr.Core.Api.VendrApi">
            <summary>
            Convenient singleton access to the Vendr API
            </summary>
            <remarks>This helper is providing singleton access to the Vendr API which generally isn't considered "best practice". 
            You should instead look to resolve the <see cref="T:Vendr.Core.Api.IVendrApi"/> via dependency injection where possible, and only
            resort to this singleton where you have no other option.</remarks>
        </member>
        <member name="P:Vendr.Core.Api.VendrApi.Instance">
            <summary>
            Get the <see cref="T:Vendr.Core.Api.IVendrApi"/> entry point
            </summary>
        </member>
        <member name="P:Vendr.Core.Api.VendrContext.Services">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.VendrServiceContext"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Api.VendrContext.Security">
            <summary>
            Gets the <see cref="T:Vendr.Core.Security.VendrSecurityContext"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Api.VendrContext.Session">
            <summary>
            Gets the <see cref="T:Vendr.Core.Session.ISessionManager"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Api.VendrContext.Uow">
            <summary>
            Gets the <see cref="T:Vendr.Common.IUnitOfWorkProvider"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Api.VendrContext.IO">
            <summary>
            Gets the <see cref="T:Vendr.Common.IO.IIOHelper"/>
            </summary>
        </member>
        <member name="T:Vendr.Core.Cache.DefaultEntityStatePolicyCache`2">
            <summary>
            Represents the default policy cache.
            </summary>
            <typeparam name="TState">The type of the state.</typeparam>
            <remarks>
            <para>The default policy cache that caches entities with a 5 minutes sliding expiration.</para>
            <para>Each entity is cached individually.</para>
            <para>If options.GetAllCacheAllowZeroCount then a 'zero-count' array is cached when GetAll finds nothing.</para>
            <para>If options.GetAllCacheValidateCount then we check against the db when getting many entities.</para>
            </remarks>
        </member>
        <member name="M:Vendr.Core.Cache.EntityCaches.#ctor(System.Func{System.Type,Vendr.Core.Cache.IEntityCache})">
            <summary>
            Initializes a new instance of the <see cref="T:Vendr.Core.Cache.EntityCaches"/> class.
            </summary>
        </member>
        <member name="M:Vendr.Core.Cache.EntityCaches.GetOrCreate``1">
            <summary>
            Gets a cache.
            </summary>
        </member>
        <member name="P:Vendr.Core.Calculators.VendrCalculatorContext.OrderCalculator">
            <summary>
            Gets the <see cref="T:Vendr.Core.Calculators.IOrderCalculator"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Calculators.VendrCalculatorContext.OrderLineCalculator">
            <summary>
            Gets the <see cref="T:Vendr.Core.Calculators.IOrderLineCalculator"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Calculators.VendrCalculatorContext.PaymentCalculator">
            <summary>
            Gets the <see cref="T:Vendr.Core.Calculators.IPaymentCalculator"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Calculators.VendrCalculatorContext.ShippingCalculator">
            <summary>
            Gets the <see cref="T:Vendr.Core.Calculators.IShippingCalculator"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Calculators.VendrCalculatorContext.ProductCalculator">
            <summary>
            Gets the <see cref="T:Vendr.Core.Calculators.IProductCalculator"/>
            </summary>
        </member>
        <member name="T:Vendr.Core.Configuration.IVendrSettings">
            <summary>
            Contains global Vendr settings
            </summary>
        </member>
        <member name="P:Vendr.Core.Configuration.IVendrSettings.BackOfficePath">
            <summary>
            Gets the back office path for this Vendr install
            </summary>
        </member>
        <member name="P:Vendr.Core.Configuration.IVendrSettings.BackOfficeMvcArea">
            <summary>
            Gets the back office MVC area under which Vendr is installed
            </summary>
        </member>
        <member name="P:Vendr.Core.Configuration.IVendrSettings.CookiesHttpOnly">
            <summary>
            Gets a setting to define whether cookies should be http only, thus blocking javascript access
            </summary>
        </member>
        <member name="P:Vendr.Core.Configuration.IVendrSettings.LicensesDirectory">
            <summary>
            Gets the directory that contains the Vendr licenses
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants">
            <summary>
            Vendr constant variables
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.Entities">
            <summary>
            Entity related constants
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.Entities.EntityTypes">
            <summary>
            Entity type constants
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.Store">
            <summary>
            Store entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.Country">
            <summary>
            Country entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.Region">
            <summary>
            Region entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.Currency">
            <summary>
            Currency entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.EmailTemplate">
            <summary>
            Email Template entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.PrintTemplate">
            <summary>
            Print Template entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.ExportTemplate">
            <summary>
            Export Template entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.PaymentMethod">
            <summary>
            Payment Method entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.ShippingMethod">
            <summary>
            Shipping Method entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.TaxClass">
            <summary>
            Tax Class entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.OrderStatus">
            <summary>
            Order Status entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.Order">
            <summary>
            Order entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.Discount">
            <summary>
            Discount entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.GiftCard">
            <summary>
            Gift Card entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.ProductAttribute">
            <summary>
            Product Attribute entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.ProductAttributeValue">
            <summary>
            Product Attribute Value entity type
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Entities.EntityTypes.ProductAttributePreset">
            <summary>
            Product Attribute Preset entity type
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.Properties">
            <summary>
            Property constants
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.Properties.Product">
            <summary>
            Product property constants
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Properties.Product.NamePropertyAlias">
            <summary>
            The property alias of the product Product Name property
            </summary>
            <remarks>If a productName property isn't present, the nodes Name will be used</remarks>
        </member>
        <member name="F:Vendr.Core.Constants.Properties.Product.IsGiftCardPropertyAlias">
            <summary>
            The property alias of the product Is Gift Card property
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Properties.Product.IsRecurringPropertyAlias">
            <summary>
            The property alias of the product Is Recurring property
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.Properties.Customer">
            <summary>
            Customer property constants
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Properties.Customer.FirstNamePropertyAlias">
            <summary>
            The property alias of the customer First Name property
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Properties.Customer.LastNamePropertyAlias">
            <summary>
            The property alias of the customer Last Name property
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.Properties.Customer.EmailPropertyAlias">
            <summary>
            The property alias of the customer Email property
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.InstanceId">
            <summary>
            Defines a unique instance ID for this instance of Vendr.
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.System">
            <summary>
            System constants
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.System.ProductName">
            <summary>
            The Vendr product name
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.System.ProductAlias">
            <summary>
            The Vendr product alias
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.System.MigrationPlanName">
            <summary>
            The Vendr migration plan name
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.System.LicensingPublicKey">
            <summary>
            The public key for validating Vendr licenses
            </summary>
        </member>
        <member name="T:Vendr.Core.Constants.System.Messages">
            <summary>
            System message constants
            </summary>
        </member>
        <member name="F:Vendr.Core.Constants.System.Messages.ScaffoldToWritableExceptionMessage">
            <summary>
            Exception message to display if a scaffold entity is attempted to be made writable
            </summary>
        </member>
        <member name="F:Vendr.Core.Licensing.LicenseType.Unknown">
            <summary>
            An unknown license type
            </summary>
        </member>
        <member name="F:Vendr.Core.Licensing.LicenseType.System">
            <summary>
            A system provided license
            </summary>
        </member>
        <member name="F:Vendr.Core.Licensing.LicenseType.Trial">
            <summary>
            For trial or demo use
            </summary>
        </member>
        <member name="F:Vendr.Core.Licensing.LicenseType.Standard">
            <summary>
            Standard license
            </summary>
        </member>
        <member name="F:Vendr.Core.Licensing.LicenseType.Subscription">
            <summary>
            Subscription license
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.AggregateBase`3">
            <summary>
            The base class of an aggregate entity
            </summary>
            <typeparam name="TReadOnlySelf">The Type of the read only aggregate entity</typeparam>
            <typeparam name="TWritableSelf">The Type of the writable aggregate entity</typeparam>
            <typeparam name="TState">The Type of the shared state of the aggregate entities</typeparam>
        </member>
        <member name="P:Vendr.Core.Models.AggregateBase`3.IsNew">
            <summary>
            Gets a boolean flag to indicate whether the entity is new and therefore has not yet been persisted to the database
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.AggregateBase`3.QuietSet(System.Action{`1})">
            <summary>
            Provides a wrapper around an action to allow changes to occur on an entity without it raising any notification events
            </summary>
            <param name="actions">The action to perform</param>
            <returns>The updated entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.AggregateBase`3.Validate(Vendr.Common.Events.IValidationEvent)">
            <summary>
            Raise a <see cref="T:Vendr.Common.Events.IValidationEvent"/> throwing a <see cref="T:Vendr.Common.Validation.ValidationException"/> if the validation fails
            </summary>
            <param name="validationEvent">The <see cref="T:Vendr.Common.Events.IValidationEvent"/> to raise</param>
            <exception cref="T:Vendr.Common.Validation.ValidationException">Thrown if validation fails</exception>
        </member>
        <member name="M:Vendr.Core.Models.AggregateBase`3.AsWritable(Vendr.Common.IUnitOfWork)">
            <summary>
            Converts the entity into it's writable counterpart
            </summary>
            <param name="uow">An active <see cref="T:Vendr.Common.IUnitOfWork"/> to use for write operations</param>
            <returns>The writable entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.AggregateBase`3.AsReadOnly">
            <summary>
            Converts the entity into it's read only counterpart
            </summary>
            <returns>The read only entity</returns>
        </member>
        <member name="T:Vendr.Core.Models.AliasNamePair">
            <summary>
            Represents an Alias + Name combination
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.AliasNamePair.Alias">
            <summary>
            Gets the alias
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.AliasNamePair.Name">
            <summary>
            Gets the name
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.AliasNamePair.#ctor(System.String,System.String)">
            <summary>
            Creates a new AliasNamePair instance
            </summary>
            <param name="alias">The alias</param>
            <param name="name">The name</param>
        </member>
        <member name="M:Vendr.Core.Models.AliasNamePair.ToString">
            <summary>
            Converts the alias name pair to a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vendr.Core.Models.AliasNamePair.GetEqualityComponents">
            <summary>
            Gets a series of properties of use for equality comparisons
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vendr.Core.Models.AliasNamePair.op_Implicit(Vendr.Core.Models.AliasNamePair)~System.String">
            <summary>
            Explicit string conversion operator
            </summary>
            <param name="anp">The alias name pair to convert</param>
        </member>
        <member name="T:Vendr.Core.Models.Amount">
            <summary>
            A Vendr amount object
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Amount.CurrencyId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the amount
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Amount.CultureName">
            <summary>
            Gets the Culture Name of the <see cref="T:Vendr.Core.Models.Currency"/> of the amount
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Amount.Value">
            <summary>
            Gets the value of the amount
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.Amount.#ctor(System.Decimal,System.Guid)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Amount"/> instance
            </summary>
            <param name="value">The value of the amount</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the amount</param>
        </member>
        <member name="M:Vendr.Core.Models.Amount.#ctor(System.Decimal,Vendr.Core.Models.CurrencyReadOnly)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Amount"/> instance
            </summary>
            <param name="value">The value of the amount</param>
            <param name="currency">The <see cref="T:Vendr.Core.Models.Currency"/> of the amount</param>
        </member>
        <member name="M:Vendr.Core.Models.Amount.OfSameCurrency(Vendr.Core.Models.Amount,System.Decimal)">
            <summary>
            Create a new <see cref="T:Vendr.Core.Models.Amount"/> of the same <see cref="T:Vendr.Core.Models.Currency"/> as an existing amount
            </summary>
            <param name="existingAmount">The existing <see cref="T:Vendr.Core.Models.Amount"/> instance</param>
            <param name="value">The value of the new amount</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Amount"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Amount.DeepClone">
            <inheritdoc />
        </member>
        <member name="M:Vendr.Core.Models.Amount.ZeroValue(System.Guid)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Amount"/> instance with a zero value
            </summary>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the amount</param>
            <returns>A zero value <see cref="T:Vendr.Core.Models.Amount"/> instance</returns>
        </member>
        <member name="T:Vendr.Core.Models.EntityBase`1">
            <summary>
            Base class for a Vendr entity
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.EntityBase`1.Id">
            <inheritdoc />
        </member>
        <member name="M:Vendr.Core.Models.EntityBase`1.DeepClone">
            <inheritdoc />
        </member>
        <member name="T:Vendr.Core.Models.EntityBase">
            <summary>
            Base class for a Vendr entity
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.EntityBase.Id">
            <summary>
            Gets the ID of the entity
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.EntityBase.DeepClone">
            <summary>
            Deep clones the entity and all of it's child entities
            </summary>
            <returns>A deep clones entity instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.EntityBase.Equals(System.Object)">
            <summary>
            Compares the entity against another entity for equality
            </summary>
            <param name="obj">The entity to compare against</param>
            <returns>Returns <see langword="true"/> if the two entities are equal, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="T:Vendr.Core.Models.FormattedAmount">
            <summary>
            A Vendr amount formatted for the given amount <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedAmount.CurrencyId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedAmount.Value">
            <summary>
            Gets the value of the amount formatted with a currency symbol
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedAmount.ValueNoSymbol">
            <summary>
            Gets the value of the amount formatted without a currency symbol
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.FormattedAmount.DeepClone">
            <inheritoc />
        </member>
        <member name="T:Vendr.Core.Models.FormattedPrice">
            <summary>
            A Vendr price formatted for the given prices <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.CurrencyId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.WithoutTax">
            <summary>
            Gets the value of the price without tax formatted with a currency symbol
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.Tax">
            <summary>
            Gets the tax value of the price formatted with a currency symbol
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.WithTax">
            <summary>
            Gets the value of the price with tax formatted with a currency symbol
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.WithoutTaxNoSymbol">
            <summary>
            Gets the value of the price without tax formatted without a currency symbol
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.TaxNoSymbol">
            <summary>
            Gets the tax value of the price formatted without a currency symbol
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.FormattedPrice.WithTaxNoSymbol">
            <summary>
            Gets the value of the price with tax formatted without a currency symbol
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.FormattedPrice.DeepClone">
            <inheritdoc />
        </member>
        <member name="M:Vendr.Core.Models.GiftCard.SetProperty(System.String,System.String)">
            <summary>
            Sets a property on the order
            </summary>
            <param name="alias">The alias of the property to set</param>
            <param name="value">The value of the property</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.GiftCard"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.GiftCard.SetProperty(System.String,Vendr.Core.Models.PropertyValue)">
            <summary>
            Sets a property on the order
            </summary>
            <param name="alias">The alias of the property to set</param>
            <param name="value">The <see cref="T:Vendr.Core.Models.PropertyValue"/> of the property</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.GiftCard"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.GiftCard.SetProperties(System.Collections.Generic.IDictionary{System.String,System.String},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets a series of properties on the order
            </summary>
            <param name="properties">The properties to set</param>
            <param name="setBehavior">The behavior of the set operation, whether to <c>Merge</c> the properties into the orders existing properties collection or <c>Replace</c> the orders property collection entirely</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.GiftCard"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.GiftCard.SetProperties(System.Collections.Generic.IDictionary{System.String,Vendr.Core.Models.PropertyValue},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets a series of properties on the order
            </summary>
            <param name="properties">The properties to set</param>
            <param name="setBehavior">The behavior of the set operation, whether to <c>Merge</c> the properties into the orders existing properties collection or <c>Replace</c> the orders property collection entirely</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.GiftCard"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.GiftCard.RemoveProperty(System.String)">
            <summary>
            Removes a property from the order
            </summary>
            <param name="alias">The alias of the property to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.GiftCard"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.GiftCard.RemoveProperties(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes a series of properties from the order
            </summary>
            <param name="aliases">The aliases of the properties to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.GiftCard"/> entity</returns>
        </member>
        <member name="T:Vendr.Core.Models.OrderReadOnly">
            <summary>
            A Vendr read only Order entity
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.CurrencyId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.OrderStatusId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.OrderStatusCode">
            <summary>
            Gets the <see cref="P:Vendr.Core.Models.OrderReadOnly.OrderStatusCode"/> of the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.TaxClassId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.TaxClass"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.LanguageIsoCode">
            <summary>
            Gets the ISO Code of the Language of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.CartNumber">
            <summary>
            Gets the Cart Number of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.OrderNumber">
            <summary>
            Gets the order Number of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.CustomerInfo">
            <summary>
            Gets the <see cref="T:Vendr.Core.Models.OrderCustomerInfo"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.PaymentInfo">
            <summary>
            Gets the <see cref="T:Vendr.Core.Models.OrderPaymentInfo"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.ShippingInfo">
            <summary>
            Gets the <see cref="T:Vendr.Core.Models.OrderShippingInfo"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.TransactionInfo">
            <summary>
            Gets the <see cref="T:Vendr.Core.Models.OrderTransactionInfo"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.OrderLines">
            <summary>
            Gets the order lines of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.Properties">
            <summary>
            Gets the properties collection of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.DiscountCodes">
            <summary>
            Gets a list of discount codes applied to the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.GiftCards">
            <summary>
            Gets a list of gift cards applied to the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.Discounts">
            <summary>
            Gets a list of discounts applies to the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.TaxRate">
            <summary>
            Gets the <see cref="P:Vendr.Core.Models.OrderReadOnly.TaxRate"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.TotalQuantity">
            <summary>
            Gets the total quantity of all order line items in the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.SubtotalPrice">
            <summary>
            Gets the subtotal price of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.TotalPrice">
            <summary>
            Gets the total price of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.TransactionAmount">
            <summary>
            Gets the calculated transaction amount for the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.CreateDate">
            <summary>
            Gets the DateTime the order was created
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.UpdateDate">
            <summary>
            Gets the DateTime the order was last updated
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.FinalizedDate">
            <summary>
            Gets the DateTime the order was finalized
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.IsProcessing">
            <summary>
            Gets a boolean flag indicating whether the order is currently being processed by a payment gateway
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.IsFinalizing">
            <summary>
            Gets a boolean flag indicating whether the order is currently being finalized
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.IsFinalized">
            <summary>
            Gets a boolean flag indicating whether the order is finalized
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderReadOnly.CopiedFromOrderId">
            <summary>
            Gets the ID of a parent order this order was copied from
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.OrderReadOnly.GetOrderLine(System.Guid)">
            <summary>
            Get an order line by ID
            </summary>
            <param name="orderLineId">The ID of the order line to fetch</param>
            <returns>An <see cref="T:Vendr.Core.Models.OrderLineReadOnly"/> entity for the order line</returns>
        </member>
        <member name="M:Vendr.Core.Models.OrderReadOnly.GetBundle(System.String)">
            <summary>
            Gets a bundle order line by bundle ID
            </summary>
            <param name="bundleId">The bundle ID of the order line to fetch</param>
            <returns>An <see cref="T:Vendr.Core.Models.OrderLineReadOnly"/> entity for the order line</returns>
        </member>
        <member name="T:Vendr.Core.Models.Order">
            <summary>
            A Vendr writable Order entity
            </summary>
            <remarks>See <see cref="T:Vendr.Extensions.OrderExtensions"/> for additional Order methods</remarks>
        </member>
        <member name="P:Vendr.Core.Models.Order.IsFinalizing">
            <inheritdoc />
        </member>
        <member name="P:Vendr.Core.Models.Order.IsFinalized">
            <inheritdoc />
        </member>
        <member name="M:Vendr.Core.Models.Order.Create(Vendr.Common.IUnitOfWork,System.Guid,System.String,System.Guid,System.Guid,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.String)">
            <summary>
            Creates a new instance of an <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="uow">An active <see cref="T:Vendr.Common.IUnitOfWork"/> to use for write operations</param>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the order belongs to</param>
            <param name="languageIsoCode">The ISO Code of the language of the order</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the order</param>
            <param name="taxClassId">The ID of the <see cref="T:Vendr.Core.Models.TaxClass"/> of the order</param>
            <param name="orderStatusId">The ID of the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order</param>
            <param name="paymentMethodId">The ID of the <see cref="T:Vendr.Core.Models.PaymentMethod"/> of the order</param>
            <param name="paymentCountryId">The ID of the payment <see cref="T:Vendr.Core.Models.Country"/> of the order</param>
            <param name="paymentRegionId">The ID of the payment <see cref="T:Vendr.Core.Models.Region"/> of the order</param>
            <param name="shippingMethodId">The ID of the <see cref="T:Vendr.Core.Models.ShippingMethod"/> of the order</param>
            <param name="shippingCountryId">The ID of the shipping <see cref="T:Vendr.Core.Models.Country"/> of the order</param>
            <param name="shippingRegionId">The ID of the shipping <see cref="T:Vendr.Core.Models.Region"/> of the order</param>
            <param name="customerReference">The unique reference of the customer the order belongs to</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Order"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Create(Vendr.Common.IUnitOfWork,System.Guid,System.Guid,System.String,System.Guid,System.Guid,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.String)">
            <summary>
            Creates a new instance of an <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="uow">An active <see cref="T:Vendr.Common.IUnitOfWork"/> to use for write operations</param>
            <param name="id">And explicit ID to assign to the <see cref="T:Vendr.Core.Models.Order"/></param>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the order belongs to</param>
            <param name="languageIsoCode">The ISO Code of the language of the order</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the order</param>
            <param name="taxClassId">The ID of the <see cref="T:Vendr.Core.Models.TaxClass"/> of the order</param>
            <param name="orderStatusId">The ID of the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order</param>
            <param name="paymentMethodId">The ID of the <see cref="T:Vendr.Core.Models.PaymentMethod"/> of the order</param>
            <param name="paymentCountryId">The ID of the payment <see cref="T:Vendr.Core.Models.Country"/> of the order</param>
            <param name="paymentRegionId">The ID of the payment <see cref="T:Vendr.Core.Models.Region"/> of the order</param>
            <param name="shippingMethodId">The ID of the <see cref="T:Vendr.Core.Models.ShippingMethod"/> of the order</param>
            <param name="shippingCountryId">The ID of the shipping <see cref="T:Vendr.Core.Models.Country"/> of the order</param>
            <param name="shippingRegionId">The ID of the shipping <see cref="T:Vendr.Core.Models.Region"/> of the order</param>
            <param name="customerReference">The unique reference of the customer the order belongs to</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Order"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.AddProduct(System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Vendr.Core.Services.IProductService)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <param name="parentBundleId">The bundle ID of an existing bundle to assign the product order line to as a bundle item</param>
            <param name="uniquenessPropertyAliases">A collection of property aliases to use to identify product uniqueness when adding the product to the order</param>
            <param name="productService">A <see cref="T:Vendr.Core.Services.IProductService"/> instance to fetch the product information from</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.AddProduct(System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Vendr.Core.Services.IProductService)">
            <summary>
            Adds a product variant to the order
            </summary>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <param name="parentBundleId">The bundle ID of an existing bundle to assign the product order line to as a bundle item</param>
            <param name="uniquenessPropertyAliases">A collection of property aliases to use to identify product uniqueness when adding the product to the order</param>
            <param name="productService">A <see cref="T:Vendr.Core.Services.IProductService"/> instance to fetch the product information from</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.AddProduct(Vendr.Core.Models.IProductSnapshot,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a product to the order
            </summary>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="uniquenessPropertyAliases">A collection of property aliases to use to identify product uniqueness when adding the product to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.WithOrderLine(Vendr.Core.Models.OrderLineReadOnly)">
            <summary>
            Gets the fluent write context of an order line
            </summary>
            <param name="orderLine">The order line to get the fluent write context for</param>
            <returns>An <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/></returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.WithOrderLine(System.Guid)">
            <summary>
            Gets the fluent write context of an order line
            </summary>
            <param name="orderLineId">The ID of an order line to get the fluent write context for</param>
            <returns>An <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/></returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.RemoveOrderLine(Vendr.Core.Models.OrderLineReadOnly)">
            <summary>
            Removes an order line from the order
            </summary>
            <param name="orderLine">The order line to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.RemoveOrderLine(System.Guid)">
            <summary>
            Removes an order line from the order
            </summary>
            <param name="orderLineId">The ID of the order line to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetProperty(System.String,System.String)">
            <summary>
            Sets a property on the order
            </summary>
            <param name="alias">The alias of the property to set</param>
            <param name="value">The value of the property</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetProperty(System.String,Vendr.Core.Models.PropertyValue)">
            <summary>
            Sets a property on the order
            </summary>
            <param name="alias">The alias of the property to set</param>
            <param name="value">The <see cref="T:Vendr.Core.Models.PropertyValue"/> of the property</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetProperties(System.Collections.Generic.IDictionary{System.String,System.String},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets a series of properties on the order
            </summary>
            <param name="properties">The properties to set</param>
            <param name="setBehavior">The behavior of the set operation, whether to <c>Merge</c> the properties into the orders existing properties collection or <c>Replace</c> the orders property collection entirely</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetProperties(System.Collections.Generic.IDictionary{System.String,Vendr.Core.Models.PropertyValue},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets a series of properties on the order
            </summary>
            <param name="properties">The properties to set</param>
            <param name="setBehavior">The behavior of the set operation, whether to <c>Merge</c> the properties into the orders existing properties collection or <c>Replace</c> the orders property collection entirely</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.RemoveProperty(System.String)">
            <summary>
            Removes a property from the order
            </summary>
            <param name="alias">The alias of the property to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.RemoveProperties(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes a series of properties from the order
            </summary>
            <param name="aliases">The aliases of the properties to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetLanguage(System.String)">
            <summary>
            Sets the language of the order
            </summary>
            <param name="languageIsoCode">The ISO Code of the language to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetCurrency(Vendr.Core.Models.CurrencyReadOnly)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.Currency"/> of the order
            </summary>
            <param name="currency">The <see cref="T:Vendr.Core.Models.Currency"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetCurrency(System.Guid)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.Currency"/> of the order
            </summary>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetTaxClass(Vendr.Core.Models.TaxClassReadOnly)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.TaxClass"/> of the order
            </summary>
            <param name="taxClass">The <see cref="T:Vendr.Core.Models.TaxClass"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetTaxClass(System.Guid)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.TaxClass"/> of the order
            </summary>
            <param name="taxClassId">The ID of the <see cref="T:Vendr.Core.Models.TaxClass"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetPaymentMethod(Vendr.Core.Models.PaymentMethodReadOnly)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.PaymentMethod"/> of the order
            </summary>
            <param name="paymentMethod">The <see cref="T:Vendr.Core.Models.PaymentMethod"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetPaymentMethod(System.Nullable{System.Guid})">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.PaymentMethod"/> of the order
            </summary>
            <param name="paymentMethodId">The ID of the <see cref="T:Vendr.Core.Models.PaymentMethod"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.ClearPaymentMethod">
            <summary>
            Clears the current <see cref="T:Vendr.Core.Models.PaymentMethod"/> of the order
            </summary>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetPaymentCountryRegion(Vendr.Core.Models.CountryReadOnly,Vendr.Core.Models.RegionReadOnly)">
            <summary>
            Sets the payment <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
            <param name="country">The payment <see cref="T:Vendr.Core.Models.Country"/> to set the order to</param>
            <param name="region">The payment <see cref="T:Vendr.Core.Models.Region"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetPaymentCountryRegion(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Sets the payment <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
            <param name="countryId">The ID of the payment <see cref="T:Vendr.Core.Models.Country"/> to set the order to</param>
            <param name="regionId">The ID of the payment <see cref="T:Vendr.Core.Models.Region"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.ClearPaymentCountryRegion">
            <summary>
            Clears the payment <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetShippingMethod(Vendr.Core.Models.ShippingMethodReadOnly)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.ShippingMethod"/> of the order
            </summary>
            <param name="shippingMethod">The <see cref="T:Vendr.Core.Models.ShippingMethod"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetShippingMethod(System.Nullable{System.Guid})">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.ShippingMethod"/> of the order
            </summary>
            <param name="shippingMethodId">The ID of the <see cref="T:Vendr.Core.Models.ShippingMethod"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.ClearShippingMethod">
            <summary>
            Clears the current <see cref="T:Vendr.Core.Models.ShippingMethod"/> of the order
            </summary>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetShippingCountryRegion(Vendr.Core.Models.CountryReadOnly,Vendr.Core.Models.RegionReadOnly)">
            <summary>
            Sets the shipping <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
            <param name="country">The shipping <see cref="T:Vendr.Core.Models.Country"/> to set the order to</param>
            <param name="region">The shipping <see cref="T:Vendr.Core.Models.Region"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetShippingCountryRegion(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Sets the shipping <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
            <param name="countryId">The ID of the shipping <see cref="T:Vendr.Core.Models.Country"/> to set the order to</param>
            <param name="regionId">The ID of the shipping <see cref="T:Vendr.Core.Models.Region"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.ClearShippingCountryRegion">
            <summary>
            Clears the shipping <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Redeem(System.String,Vendr.Core.Services.IDiscountService,Vendr.Core.Services.IGiftCardService)">
            <summary>
            Redeems a <see cref="T:Vendr.Core.Models.Discount"/> or <see cref="T:Vendr.Core.Models.GiftCard"/> against the order
            </summary>
            <param name="discountOrGiftCardCode">The <see cref="T:Vendr.Core.Models.Discount"/> or <see cref="T:Vendr.Core.Models.GiftCard"/> code</param>
            <param name="discountService">A <see cref="T:Vendr.Core.Services.IDiscountService"/> instance to fetch discounts from</param>
            <param name="giftCardService">A <see cref="T:Vendr.Core.Services.IGiftCardService"/> instance to fetch gift cards from</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Unredeem(System.String)">
            <summary>
            Unredeems a <see cref="T:Vendr.Core.Models.Discount"/> or <see cref="T:Vendr.Core.Models.GiftCard"/> from the order
            </summary>
            <param name="discountOrGiftCardCode">The <see cref="T:Vendr.Core.Models.Discount"/> or <see cref="T:Vendr.Core.Models.GiftCard"/> code</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Finalize(System.Decimal,System.String,Vendr.Core.Models.PaymentStatus)">
            <summary>
            Finalizes the order
            </summary>
            <param name="amountAuthorized">The amount authorized by the payment gateway</param>
            <param name="transactionId">The ID of the transaction from the payment gateway</param>
            <param name="paymentStatus">The status of the payment</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Finalize(System.Decimal,System.Decimal,System.String,Vendr.Core.Models.PaymentStatus)">
            <summary>
            Finalizes the order
            </summary>
            <param name="amountAuthorized">The amount authorized by the payment gateway</param>
            <param name="transactionFee">The transaction fee charged by the payment gateway</param>
            <param name="transactionId">The ID of the transaction from the payment gateway</param>
            <param name="paymentStatus">The status of the payment</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.UpdateTransaction(System.Decimal,System.String,Vendr.Core.Models.PaymentStatus)">
            <summary>
            Updates the transaction info of the order
            </summary>
            <param name="amountAuthorized">The amount authorized by the payment gateway</param>
            <param name="transactionId">The ID of the transaction from the payment gateway</param>
            <param name="paymentStatus">The status of the payment</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.UpdateTransaction(System.Decimal,System.Decimal,System.String,Vendr.Core.Models.PaymentStatus)">
            <summary>
            Updates the transaction info of the order
            </summary>
            <param name="amountAuthorized">The amount authorized by the payment gateway</param>
            <param name="transactionFee">The transaction fee charged by the payment gateway</param>
            <param name="transactionId">The ID of the transaction from the payment gateway</param>
            <param name="paymentStatus">The status of the payment</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.InitializeTransaction(Vendr.Core.Generators.IOrderNumberGenerator)">
            <summary>
            Initializes a transaction ready to send to the payment gateway
            </summary>
            <param name="orderNumberGenerator">The <see cref="T:Vendr.Core.Generators.IOrderNumberGenerator"/> to use to generate and order number with</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetOrderStatus(Vendr.Core.Models.OrderStatusReadOnly)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order
            </summary>
            <param name="orderStatus">The <see cref="T:Vendr.Core.Models.OrderStatus"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetOrderStatus(System.Guid)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order
            </summary>
            <param name="orderStatusId">The ID of the <see cref="T:Vendr.Core.Models.OrderStatus"/> to set the order to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetOrderStatus(Vendr.Core.Models.OrderStatusReadOnly,Vendr.Core.Models.OrderStatusCode)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order
            </summary>
            <param name="orderStatus">The <see cref="T:Vendr.Core.Models.OrderStatus"/> to set the order to</param>
            <param name="orderStatusCode">An <see cref="T:Vendr.Core.Models.OrderStatusCode"/> to set on the order for additional order status context</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.SetOrderStatus(System.Guid,Vendr.Core.Models.OrderStatusCode)">
            <summary>
            Sets the <see cref="T:Vendr.Core.Models.OrderStatus"/> of the order
            </summary>
            <param name="orderStatusId">The ID of the <see cref="T:Vendr.Core.Models.OrderStatus"/> to set the order to</param>
            <param name="orderStatusCode">An <see cref="T:Vendr.Core.Models.OrderStatusCode"/> to set on the order for additional order status context</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.AssignToCustomer(System.String)">
            <summary>
            Assigns the order to a customer
            </summary>
            <param name="customerReference">The unique reference of the customer to assign the order to, for Umbraco members this should be <c>member.Key.ToString()</c></param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.UnassignFromCustomer">
            <summary>
            Unassigns the order from a customer
            </summary>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Recalculate(Vendr.Core.Calculators.IOrderCalculator)">
            <summary>
            Recalculates the order
            </summary>
            <param name="orderCalculator">A <see cref="T:Vendr.Core.Calculators.IOrderCalculator"/> instance to use for the calculation</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.Recalculate(System.Boolean,Vendr.Core.Calculators.IOrderCalculator)">
            <summary>
            Recalculates the order
            </summary>
            <param name="force">A boolean flag indicating whether to force recalculation whether the order needs recalculating or not</param>
            <param name="orderCalculator">A <see cref="T:Vendr.Core.Calculators.IOrderCalculator"/> instance to use for the calculation</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="T:Vendr.Core.Models.Order.OrderLineContext">
            <summary>
            The fluent write context for a Vendr order line
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.IncrementQuantity(System.Decimal)">
            <summary>
            Increments the quantity of the order line
            </summary>
            <param name="qty">The amount to increment the order line quantity by</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.DecrementQuantity(System.Decimal)">
            <summary>
            Decrements the quantity of the order line
            </summary>
            <param name="qty">The amount to decrement the order line quantity by</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.SetQuantity(System.Decimal)">
            <summary>
            Sets the quantity of the order line
            </summary>
            <param name="qty">The amount to set the order line quantity to</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.SetProperty(System.String,System.String)">
            <summary>
            Sets a property on the order line
            </summary>
            <param name="alias">The alias of the property to set</param>
            <param name="value">The value of the property</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.SetProperty(System.String,Vendr.Core.Models.PropertyValue)">
            <summary>
            Sets a property on the order line
            </summary>
            <param name="alias">The alias of the property to set</param>
            <param name="value">The <see cref="T:Vendr.Core.Models.PropertyValue"/> of the property</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.SetProperties(System.Collections.Generic.IDictionary{System.String,System.String},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets a series of properties on the order line
            </summary>
            <param name="properties">The properties to set</param>
            <param name="setBehavior">The behavior of the set operation, whether to <c>Merge</c> the properties into the orders existing properties collection or <c>Replace</c> the orders property collection entirely</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.SetProperties(System.Collections.Generic.IDictionary{System.String,Vendr.Core.Models.PropertyValue},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets a series of properties on the order line
            </summary>
            <param name="properties">The properties to set</param>
            <param name="setBehavior">The behavior of the set operation, whether to <c>Merge</c> the properties into the orders existing properties collection or <c>Replace</c> the orders property collection entirely</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.RemoveProperty(System.String)">
            <summary>
            Removes a property from the order line
            </summary>
            <param name="alias">The alias of the property to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Order.OrderLineContext.RemoveProperties(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes a series of properties from the order line
            </summary>
            <param name="aliases">The aliases of the properties to remove</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order.OrderLineContext"/> instance</returns>
        </member>
        <member name="T:Vendr.Core.Models.OrderCustomerInfo">
            <summary>
            The customer information for a Vendr order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderCustomerInfo.CustomerReference">
            <summary>
            Gets the unique reference of the customer of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderCustomerInfo.FirstName">
            <summary>
            Gets the first name of the customer of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderCustomerInfo.LastName">
            <summary>
            Gets the last name of the customer of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderCustomerInfo.Email">
            <summary>
            Gets the email address of the customer of the order
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.OrderLineReadOnly">
            <summary>
            A Vendr read only Order Line entity
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.StoreId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Store"/> this entity belongs to
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.OrderId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Order"/> this entity belongs to
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.ProductReference">
            <summary>
            Gets the unique product reference of the product of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.ProductVariantReference">
            <summary>
            Gets the unique product variant reference of the product of the order line, if it is a product variant order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.Sku">
            <summary>
            Gets the unique SKU of the product of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.Name">
            <summary>
            Gets the name of the product of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.Quantity">
            <summary>
            Gets the quantity of the product of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.TaxClassId">
            <summary>
            Gets ID of the <see cref="T:Vendr.Core.Models.TaxClass"/> of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.BundleId">
            <summary>
            Gets bundle ID of the of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.OrderLines">
            <summary>
            Gets the child order lines of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.Properties">
            <summary>
            Gets the properties of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.Attributes">
            <summary>
            Gets the attributes of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.UnitPrice">
            <summary>
            Gets the unit price of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.TaxRate">
            <summary>
            Gets the <see cref="P:Vendr.Core.Models.OrderLineReadOnly.TaxRate"/> of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.TotalPrice">
            <summary>
            Gets the total price of the order line
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderLineReadOnly.CopiedFromOrderLineId">
            <summary>
            Gets the ID of a parent order line this order line was copied from
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.OrderPaymentInfo">
            <summary>
            The payment information for a Vendr order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderPaymentInfo.CountryId">
            <summary>
            Gets the ID of the payment <see cref="T:Vendr.Core.Models.Country"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderPaymentInfo.RegionId">
            <summary>
            Gets the ID of the payment <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderPaymentInfo.PaymentMethodId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.PaymentMethod"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderPaymentInfo.TaxRate">
            <summary>
            Gets the <see cref="P:Vendr.Core.Models.OrderPaymentInfo.TaxRate"/> of the payment of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderPaymentInfo.TotalPrice">
            <summary>
            Gets the total price of the payment of the order
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.OrderShippingInfo">
            <summary>
            The shipping information for a Vendr order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderShippingInfo.CountryId">
            <summary>
            Gets the ID of the shipping <see cref="T:Vendr.Core.Models.Country"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderShippingInfo.RegionId">
            <summary>
            Gets the ID of the shipping <see cref="T:Vendr.Core.Models.Region"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderShippingInfo.ShippingMethodId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.ShippingMethod"/> of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderShippingInfo.TaxRate">
            <summary>
            Gets the <see cref="P:Vendr.Core.Models.OrderShippingInfo.TaxRate"/> of the shipping of the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderShippingInfo.TotalPrice">
            <summary>
            Gets the total price of the shipping of the order
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.OrderTransactionInfo">
            <summary>
            The transaction information for a Vendr order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderTransactionInfo.TransactionId">
            <summary>
            Gets the Transaction ID returned by the payment gateway for the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderTransactionInfo.AmountAuthorized">
            <summary>
            Gets the amount authorized by the payment gateway for the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderTransactionInfo.TransactionFee">
            <summary>
            Gets the transaction fee amount charged by the payment gateway for the order
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderTransactionInfo.BaseCurrencyExchangeRate">
            <summary>
            Gets the base currency exchange rate the order transaction amount
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.OrderTransactionInfo.PaymentStatus">
            <summary>
            Gets the <see cref="P:Vendr.Core.Models.OrderTransactionInfo.PaymentStatus"/> of the transaction for the order
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.Price">
            <summary>
            A Vendr price object
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Price.CurrencyId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Price.CultureName">
            <summary>
            Gets the Culture Name of the <see cref="T:Vendr.Core.Models.Currency"/> of the price
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Price.WithoutTax">
            <summary>
            Gets the value of the price without tax
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Price.Tax">
            <summary>
            Gets the tax value of the price
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.Price.WithTax">
            <summary>
            Gets the value of the price with tax
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.Price.#ctor(System.Decimal,System.Decimal,System.Guid)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Price"/> instance
            </summary>
            <param name="valueWithoutTax">The value of the price without tax</param>
            <param name="tax">The tax value of the price</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
        </member>
        <member name="M:Vendr.Core.Models.Price.#ctor(System.Decimal,System.Decimal,Vendr.Core.Models.CurrencyReadOnly)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Price"/> instance
            </summary>
            <param name="valueWithoutTax">The value of the price without tax</param>
            <param name="tax">The tax value of the price</param>
            <param name="currency">The <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
        </member>
        <member name="M:Vendr.Core.Models.Price.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Guid)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Price"/> instance
            </summary>
            <param name="valueWithoutTax">The value of the price without tax</param>
            <param name="tax">The tax value of the price</param>
            <param name="valueWithTax">The value of the price with tax</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
        </member>
        <member name="M:Vendr.Core.Models.Price.#ctor(System.Decimal,System.Decimal,System.Decimal,Vendr.Core.Models.CurrencyReadOnly)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Price"/> instance
            </summary>
            <param name="valueWithoutTax">The value of the price without tax</param>
            <param name="tax">The tax value of the price</param>
            <param name="valueWithTax">The value of the price with tax</param>
            <param name="currency">The <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
        </member>
        <member name="M:Vendr.Core.Models.Price.Calculate(System.Decimal,Vendr.Core.Models.TaxRate,System.Guid,System.Boolean)">
            <summary>
            Calculates a price from the given <see cref="T:Vendr.Core.Models.TaxRate"/>
            </summary>
            <param name="value">The value of the price</param>
            <param name="taxRate">The <see cref="T:Vendr.Core.Models.TaxRate"/> of the price</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
            <param name="valueIncludesTax">A boolean flag indicating whether the supplied price already includes tax</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Price"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Price.Calculate(System.Decimal,Vendr.Core.Models.TaxRate,Vendr.Core.Models.CurrencyReadOnly,System.Boolean)">
            <summary>
            Calculates a price from the given <see cref="T:Vendr.Core.Models.TaxRate"/>
            </summary>
            <param name="value">The value of the price</param>
            <param name="taxRate">The <see cref="T:Vendr.Core.Models.TaxRate"/> of the price</param>
            <param name="currency">The <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
            <param name="valueIncludesTax">A boolean flag indicating whether the supplied price already includes tax</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Price"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Price.OfSameCurrency(Vendr.Core.Models.Price,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:Vendr.Core.Models.Price"/> of the same <see cref="T:Vendr.Core.Models.Currency"/> as an existing price
            </summary>
            <param name="existingPrice">The existing <see cref="T:Vendr.Core.Models.Price"/> instance</param>
            <param name="valueWithoutTax">The value of the new price without tax</param>
            <param name="tax">The tax value of the new price</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Price"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Price.OfSameCurrency(Vendr.Core.Models.Price,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Create a new <see cref="T:Vendr.Core.Models.Price"/> of the same <see cref="T:Vendr.Core.Models.Currency"/> as an existing price
            </summary>
            <param name="existingPrice">The existing <see cref="T:Vendr.Core.Models.Price"/> instance</param>
            <param name="valueWithoutTax">The value of the new price without tax</param>
            <param name="tax">The tax value of the new price</param>
            <param name="valueWithTax">The value of the new price with tax</param>
            <returns>A new <see cref="T:Vendr.Core.Models.Price"/> instance</returns>
        </member>
        <member name="M:Vendr.Core.Models.Price.DeepClone">
            <inheritdoc />
        </member>
        <member name="M:Vendr.Core.Models.Price.ZeroValue(System.Guid)">
            <summary>
            Instantiates a new <see cref="T:Vendr.Core.Models.Price"/> instance with a zero value
            </summary>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
            <returns>A zero value <see cref="T:Vendr.Core.Models.Price"/> instance</returns>
        </member>
        <member name="T:Vendr.Core.Models.ProductAttributeScaffold">
            <summary>
            A Vendr Product Attribute entity scaffold
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.ProductAttributeReadOnly">
            <summary>
            A Vendr read only Product Attribute entity
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeReadOnly.Alias">
            <summary>
            Gets the Alias of the Product Attribute
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeReadOnly.Name">
            <summary>
            Gets the Name of the Product Attribute
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeReadOnly.Values">
            <summary>
            Gets the Values of the Product Attribute
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeReadOnly.SortOrder">
            <summary>
            Gets the Sort Order of the Product Attribute
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeReadOnly.IsDeleted">
            <summary>
            Gets a flag indicating whether the Product Attribute is deleted or not
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.ProductAttribute">
            <summary>
            A Vendr Product Attribute entity
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetAlias(System.String)">
            <summary>
            Sets the Alias of the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetName(System.String)">
            <summary>
            Sets the default Name of the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetName(System.String,System.String)">
            <summary>
            Sets the Name of the Product Attribute for the given language
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetName(Vendr.Core.Models.TranslatedValue{System.String},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets the translated Name of the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.AddValue(System.String,System.String)">
            <summary>
            Adds a Value with a default Name to the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.AddValue(System.String,Vendr.Core.Models.TranslatedValue{System.String})">
            <summary>
            Adds a Value with a translated Name to the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.InsertValue(System.Int32,System.String,System.String)">
            <summary>
            Inserts a Value with a default Name into the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.InsertValue(System.Int32,System.String,Vendr.Core.Models.TranslatedValue{System.String})">
            <summary>
            Inserts a Value with a translated Name into the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.RemoveValue(System.String)">
            <summary>
            Removes a Value with the given Alias from the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.RemoveValueAt(System.Int32)">
            <summary>
            Removes a Value at the given index from the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.ClearValues">
            <summary>
            Clears all Values from the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetValues(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Sets the Values of the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetValues(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Vendr.Core.Models.TranslatedValue{System.String}}})">
            <summary>
            Sets the Values of the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.WithValue(System.String)">
            <summary>
            Gets the product attribute value context for the value with the given alias
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.WithValueAt(System.Int32)">
            <summary>
            Gets the product attribute value context for the value at the given index
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.SetSortOrder(System.Int32)">
            <summary>
            Sets the sort order of the product attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.ProductAttributeValueContext.SetName(System.String)">
            <summary>
            Sets the default Name of the Product Attribute Value
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.ProductAttributeValueContext.SetName(System.String,System.String)">
            <summary>
            Sets the Name of the Product Attribute Value for the given language
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttribute.ProductAttributeValueContext.SetName(Vendr.Core.Models.TranslatedValue{System.String},Vendr.Core.Models.SetBehavior)">
            <summary>
            Sets the translated Name of the Product Attribute Value
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.ProductAttributePresetScaffold">
            <summary>
            A Vendr Product Attribute Preset entity scaffold
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.ProductAttributePresetReadOnly">
            <summary>
            A Vendr read only Product Attribute Preset entity
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.Icon">
            <summary>
            Gets the Icon of the Product Attribute Preset
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.Alias">
            <summary>
            Gets the Alias of the Product Attribute Preset
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.Name">
            <summary>
            Gets the Name of the Product Attribute Preset
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.Description">
            <summary>
            Gets the Description of the Product Attribute Preset
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.AllowedAttributes">
            <summary>
            Gets the list of allowed Product Attribtues for this Product Attribute Preset
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.SortOrder">
            <summary>
            Gets the Sort Order of the Product Attribute Preset
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributePresetReadOnly.IsDeleted">
            <summary>
            Gets a flag indicating whether the Product Attribute Preset is deleted or not
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeValueReadOnly.StoreId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Store"/> this entity belongs to
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeValueReadOnly.ProductAttributeId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.ProductAttribute"/> this entity belongs to
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeValueReadOnly.Alias">
            <summary>
            Gets the Alias of the Product Attribute
            </summary>
        </member>
        <member name="P:Vendr.Core.Models.ProductAttributeValueReadOnly.Name">
            <summary>
            Gets the Name of the Product Attribute
            </summary>
        </member>
        <member name="M:Vendr.Core.Models.ProductAttributeValueReadOnly.#ctor(Vendr.Core.Models.ProductAttributeValueState,Vendr.Core.Models.ProductAttributeReadOnly)">
            <summary>
            Gets the Sort Order of the Product Attribute
            </summary>
        </member>
        <member name="T:Vendr.Core.Models.StoreAggregateBase`3">
            <summary>
            The base class of <see cref="T:Vendr.Core.Models.Store"/> based aggregate entity
            </summary>
            <typeparam name="TReadOnlySelf">The Type of the read only aggregate entity</typeparam>
            <typeparam name="TWritableSelf">The Type of the writable aggregate entity</typeparam>
            <typeparam name="TState">The Type of the shared state of the aggregate entities</typeparam>
        </member>
        <member name="P:Vendr.Core.Models.StoreAggregateBase`3.StoreId">
            <summary>
            Gets the ID of the <see cref="T:Vendr.Core.Models.Store"/> this entity belongs to
            </summary>
        </member>
        <member name="P:Vendr.Core.Security.VendrSecurityContext.HashProvider">
            <summary>
            Gets the <see cref="T:Vendr.Common.Security.IHashProvider"/>
            </summary>
        </member>
        <member name="T:Vendr.Core.Services.ICachedEntityService`1">
            <summary>
            Defines a service that supports cached entities
            </summary>
            <typeparam name="TEntityType">The Type of the entity</typeparam>
        </member>
        <member name="M:Vendr.Core.Services.ICachedEntityService`1.InvalidateEntityCache(System.Guid)">
            <summary>
            Invalidates the services entity cache for a given entity
            </summary>
            <param name="entityId">The ID of the entity to invalidate</param>
        </member>
        <member name="M:Vendr.Core.Services.ICachedEntityService`1.InvalidateEntityCache">
            <summary>
            Invalidates the entire services entity cache
            </summary>
        </member>
        <member name="T:Vendr.Core.Services.ICountryService">
            <summary>
            Defines the Vendr Country service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.CountryExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.CountryReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given ISO Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity belongs to</param>
            <param name="code">The ISO Code of the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.RegionExists(System.Guid,System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.RegionReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> / <see cref="T:Vendr.Core.Models.CountryReadOnly"/> with the given Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity belongs to</param>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity belongs to</param>
            <param name="code">The Code of the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.CreateAllCountryRegions(System.Guid,System.Guid)">
            <summary>
            Creates all <see cref="T:Vendr.Core.Models.CountryReadOnly"/> and <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities for a store based on IS03166 country list
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity belongs to</param>
            <param name="defaultCurrencyId">The ID of the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> to use as the default currency</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetCountries(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetCountries(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetRegions(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetRegions(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetRegions(System.Guid,System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/> and <see cref="T:Vendr.Core.Models.Country"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities belong to</param>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetIso3166CountryRegions">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.Iso3166Country"/> entities
            </summary>
            <returns>A list of <see cref="T:Vendr.Core.Models.Iso3166Country"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetCountry(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetCountry(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and ISO Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity belongs to</param>
            <param name="code">The ISO Code of the <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.CountryReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetRegion(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.GetRegion(System.Guid,System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity belongs to</param>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity belongs to</param>
            <param name="code">The Code of the <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.RegionReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.SaveCountry(Vendr.Core.Models.Country)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.Country"/> 
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Country"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.SaveRegion(Vendr.Core.Models.Region)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.Region"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Region"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.DeleteCountry(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Country"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.Country"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.DeleteCountry(Vendr.Core.Models.Country)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Country"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Country"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.DeleteRegion(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Region"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.Region"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.DeleteRegion(Vendr.Core.Models.Region)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Region"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Region"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.SortCountries(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.Country"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.Country"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="M:Vendr.Core.Services.ICountryService.SortRegions(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.Region"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.Region"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyExchangeRateService.GetExchangeRate(System.String,System.String,System.DateTime)">
            <summary>
            Gets the exchange between the given currencies on the supplied date
            </summary>
            <param name="fromCurrencyIsoCode">The currency ISO code to exchange from</param>
            <param name="toCurrencyIsoCode">The currency ISO code to exchange to</param>
            <param name="date">The date</param>
            <returns>The exchange rate between the two currencies for the given date</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyExchangeRateService.GetExchangeRates(System.String,System.String[],System.DateTime,System.DateTime)">
            <summary>
            Gets a list of currency exchange rates from the given currency, to the list of target currencies between two dates
            </summary>
            <param name="fromCurrencyIsoCode">The currency ISO code to exchange from</param>
            <param name="toCurrencyIsoCodes">The currency ISO codes to exchange to</param>
            <param name="dateFrom">The from date</param>
            <param name="dateTo">The to date</param>
            <returns>A dictionary of dictionaries where the first dictionary is keyed by the day and the second dictionary is keyed by the target currency code</returns>
        </member>
        <member name="T:Vendr.Core.Services.ICurrencyService">
            <summary>
            Defines the Vendr Currency service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.CurrencyExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given ISO Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity belongs to</param>
            <param name="code">The ISO Code of the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.GetCurrencies(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.GetCurrencies(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.GetCurrenciesAllowedIn(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities allowed in the given <see cref="T:Vendr.Core.Models.Country"/>
            </summary>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity should be allowed in</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.GetCurrency(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.GetCurrency(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and ISO Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity belongs to</param>
            <param name="code">The ISO Code of the <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.CurrencyReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.SaveCurrency(Vendr.Core.Models.Currency)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Currency"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.DeleteCurrency(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.DeleteCurrency(Vendr.Core.Models.Currency)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Currency"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ICurrencyService.SortCurrencies(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.Currency"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.Currency"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IDiscountService">
            <summary>
            Defines the Vendr Discount service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.DiscountExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscounts(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscounts(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetActiveDiscounts(System.Guid)">
            <summary>
            Get a list of currently active <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <remarks>A discount is active if it's Active status is <see langword="true"/> and it's StartDate and ExpiryDate are either <see langword="null"/>, or the current UTC Date Time is between these two dates</remarks>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscount(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscount(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscountByCode(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Discount Code
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity belongs to</param>
            <param name="code">A Discount Code associated with the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.DiscountCodeExists(System.Guid,System.String)">
            <summary>
            Check to see if a Discount Code already exists in the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity belongs to</param>
            <param name="code">The Discount Code to check</param>
            <returns>Returns <see langword="true"/> if the Discount Code exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.ValidateDiscountCode(System.Guid,System.String)">
            <summary>
            Check whether a Discount Code is valid
            </summary>
            <remarks>A Discount Code is valid if it's associated Discount has an Active status of <see langword="true"/> and it's StartDate and ExpiryDate are either <see langword="null"/>, or the current UTC Date Time is between these two dates, and the given Discount Code has not yet reached it's usage limit</remarks>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.DiscountReadOnly"/> entity belongs to</param>
            <param name="code">The Discount Code to validate</param>
            <returns>Returns <see langword="true"/> if the Discount Code is valid, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscountRuleProviderDefinitions">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Discounts.Rules.DiscountRuleProviderDefinition"/> entities for all <see cref="T:Vendr.Core.Discounts.Rules.IDiscountRuleProvider"/> instances
            </summary>
            <returns>A list of <see cref="T:Vendr.Core.Discounts.Rules.DiscountRuleProviderDefinition"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscountRuleProviderScaffold(System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Discounts.Rules.DiscountRuleProviderScaffold"/> by <see cref="T:Vendr.Core.Discounts.Rules.IDiscountRuleProvider"/> Alias
            </summary>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Discounts.Rules.IDiscountRuleProvider"/> to create a <see cref="T:Vendr.Core.Discounts.Rules.DiscountRuleProviderScaffold"/> for</param>
            <returns>A <see cref="T:Vendr.Core.Discounts.Rules.DiscountRuleProviderScaffold"/></returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscountRewardProviderDefinitions">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Discounts.Rewards.DiscountRewardProviderDefinition"/> entities for all <see cref="T:Vendr.Core.Discounts.Rewards.IDiscountRewardProvider"/> instances
            </summary>
            <returns>A list of <see cref="T:Vendr.Core.Discounts.Rewards.DiscountRewardProviderDefinition"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.GetDiscountRewardProviderScaffold(System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Discounts.Rewards.DiscountRewardProviderScaffold"/> by <see cref="T:Vendr.Core.Discounts.Rewards.IDiscountRewardProvider"/> Alias
            </summary>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Discounts.Rewards.IDiscountRewardProvider"/> to create a <see cref="T:Vendr.Core.Discounts.Rewards.DiscountRewardProviderScaffold"/> for</param>
            <returns>A <see cref="T:Vendr.Core.Discounts.Rewards.DiscountRewardProviderScaffold"/></returns>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.SaveDiscount(Vendr.Core.Models.Discount)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.Discount"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Discount"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.DeleteDiscount(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Discount"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.Discount"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.DeleteDiscount(Vendr.Core.Models.Discount)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Discount"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Discount"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IDiscountService.SortDiscounts(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.Discount"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.Discount"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IEmailTemplateService">
            <summary>
            Defines the Vendr Email Template service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.EmailTemplateExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.GetEmailTemplates(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.GetEmailTemplates(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.GetEmailTemplate(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.GetEmailTemplate(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.EmailTemplateReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.SaveEmailTemplate(Vendr.Core.Models.EmailTemplate)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.EmailTemplate"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.EmailTemplate"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.DeleteEmailTemplate(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.EmailTemplate"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.EmailTemplate"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.DeleteEmailTemplate(Vendr.Core.Models.EmailTemplate)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.EmailTemplate"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.EmailTemplate"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.SortEmailTemplates(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.EmailTemplate"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.EmailTemplate"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.SendEmail(Vendr.Core.Models.EmailTemplateReadOnly,Vendr.Core.Models.OrderReadOnly)">
            <summary>
            Sends an email using the given <see cref="T:Vendr.Core.Models.EmailTemplate"/> to an <see cref="T:Vendr.Core.Models.Order"/> customer using the <see cref="T:Vendr.Core.Models.Order"/> as the <see cref="T:Vendr.Core.Models.EmailTemplate"/> model
            </summary>
            <param name="emailTemplate">The <see cref="T:Vendr.Core.Models.EmailTemplate"/> to send</param>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> to use as the <see cref="T:Vendr.Core.Models.EmailTemplate"/> model and from which to access the Customer email address to send the email to</param>
            <returns>Returns <see langword="true"/> if the send was successful, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IEmailTemplateService.SendEmail``1(Vendr.Core.Models.EmailTemplateReadOnly,``0,System.String,System.String)">
            <summary>
            Sends an email using the given <see cref="T:Vendr.Core.Models.EmailTemplate"/> to the given email address, using the given model
            </summary>
            <typeparam name="TModel">The Type of the model for the <see cref="T:Vendr.Core.Models.EmailTemplate"/></typeparam>
            <param name="emailTemplate">The <see cref="T:Vendr.Core.Models.EmailTemplate"/> to send</param>
            <param name="model">The model instance for the <see cref="T:Vendr.Core.Models.EmailTemplate"/></param>
            <param name="toEmailAddress">The email address to send the email to</param>
            <param name="languageIsoCode">The ISO Code of the language to send the email in</param>
            <returns>Returns <see langword="true"/> if the send was successful, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="T:Vendr.Core.Services.IExportTemplateService">
            <summary>
            Defines the Vendr Export Template service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.ExportTemplateExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.GetExportTemplates(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.GetExportTemplates(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.GetExportTemplate(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.GetExportTemplate(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ExportTemplateReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.SaveExportTemplate(Vendr.Core.Models.ExportTemplate)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.ExportTemplate"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ExportTemplate"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.DeleteExportTemplate(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ExportTemplate"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ExportTemplate"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.DeleteExportTemplate(Vendr.Core.Models.ExportTemplate)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ExportTemplate"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ExportTemplate"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IExportTemplateService.SortExportTemplates(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.ExportTemplate"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.ExportTemplate"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IOrderService">
            <summary>
            Defines the Vendr Order service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.SearchOrders(Vendr.Common.Specifications.IQuerySpecification{Vendr.Core.Models.OrderReadOnly},System.Int64,System.Int64)">
            <summary>
            Search for <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities
            </summary>
            <param name="query">The query specification to perform</param>
            <param name="currentPage">The page of results of which to retrieve</param>
            <param name="itemsPerPage">The number of items per page to return</param>
            <returns>A paginated list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.SearchOrders(Vendr.Common.Specifications.IQuerySpecification{Vendr.Core.Models.OrderReadOnly},Vendr.Common.Specifications.ISortSpecification{Vendr.Core.Models.OrderReadOnly},System.Int64,System.Int64)">
            <summary>
            Search for <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities
            </summary>
            <param name="query">The query specification to perform</param>
            <param name="sort">The sort order specification describinng the sort order in which to return the results</param>
            <param name="currentPage">The page of results of which to retrieve</param>
            <param name="itemsPerPage">The number of items per page to return</param>
            <returns>A paginated list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.SearchOrders(System.Func{Vendr.Core.Specifications.Order.IOrderQuerySpecificationFactory,Vendr.Common.Specifications.IQuerySpecification{Vendr.Core.Models.OrderReadOnly}},System.Int64,System.Int64)">
            <summary>
            Search for <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities
            </summary>
            <param name="query">The factory method to generate the query specification to perform</param>
            <param name="currentPage">The page of results of which to retrieve</param>
            <param name="itemsPerPage">The number of items per page to return</param>
            <returns>A paginated list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.SearchOrders(System.Func{Vendr.Core.Specifications.Order.IOrderQuerySpecificationFactory,Vendr.Common.Specifications.IQuerySpecification{Vendr.Core.Models.OrderReadOnly}},System.Func{Vendr.Core.Specifications.Order.IOrderSortSpecificationFactory,Vendr.Common.Specifications.ISortSpecification{Vendr.Core.Models.OrderReadOnly}},System.Int64,System.Int64)">
            <summary>
            Search for <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities
            </summary>
            <param name="query">The factory method to generate the query specification to perform</param>
            <param name="sort">The factory method to generate the sort order specification describinng the sort order in which to return the results</param>
            <param name="currentPage">The page of results of which to retrieve</param>
            <param name="itemsPerPage">The number of items per page to return</param>
            <returns>A paginated list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetOrders(System.Guid[])">
            <summary>
            Gets a list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities matching the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetFinalizedOrdersForCustomer(System.Guid,System.String)">
            <summary>
            Gets a list of finalized <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities for a given customer
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities belong to</param>
            <param name="customerReferenceOrEmail">The unique reference or email address of the customer associated with the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetOpenOrdersForCustomer(System.Guid,System.String)">
            <summary>
            Gets a list of open <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities for a given customer
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities belong to</param>
            <param name="customerReferenceOrEmail">The unique reference or email address of the customer associated with the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetAllOrdersForCustomer(System.Guid,System.String)">
            <summary>
            Gets a list of all open or finalized <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities for a given customer
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities belong to</param>
            <param name="customerReferenceOrEmail">The unique reference or email address of the customer associated with the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetOrder(System.Guid)">
            <summary>
            Get an <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entity by ID
            </summary>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entity to fetch</param>
            <returns>An <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetOrder(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and cart or order number
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entity belongs to</param>
            <param name="cartOrOrderNumber">The cart or order number to search for</param>
            <returns>A <see cref="T:Vendr.Core.Models.OrderReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.SaveOrder(Vendr.Core.Models.Order)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Order"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.DeleteOrder(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.DeleteOrder(Vendr.Core.Models.Order)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Order"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.DeleteOrder(System.Guid,System.Boolean)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> to delete</param>
            <param name="revertFinalized">A boolean flag indicating whether to reverse the order finalization, undoing any stock reductions, discount code usages or gift card deductions</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.DeleteOrder(Vendr.Core.Models.Order,System.Boolean)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.Order"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Order"/> to delete</param>
            <param name="revertFinalized">A boolean flag indicating whether to reverse the order finalization, undoing any stock reductions, discount code usages or gift card deductions</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderService.GetFinalizedOrderCount(System.Guid)">
            <summary>
            Get the total number of finalized <see cref="T:Vendr.Core.Models.Order"/> entities in a given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> to count from</param>
            <returns>A count of the number of finalized <see cref="T:Vendr.Core.Models.Order"/> entities in the given <see cref="T:Vendr.Core.Models.Store"/></returns>
        </member>
        <member name="T:Vendr.Core.Services.IOrderStatusService">
            <summary>
            Defines the Vendr Order Status service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.OrderStatusExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.GetOrderStatuses(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.GetOrderStatuses(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.GetOrderStatus(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.GetOrderStatus(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.OrderStatusReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.SaveOrderStatus(Vendr.Core.Models.OrderStatus)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.OrderStatus"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.OrderStatus"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.DeleteOrderStatus(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.OrderStatus"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.OrderStatus"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.DeleteOrderStatus(Vendr.Core.Models.OrderStatus)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.OrderStatus"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.OrderStatus"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IOrderStatusService.SortOrderStatuses(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.OrderStatus"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.OrderStatus"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IPaymentMethodService">
            <summary>
            Defines the Vendr Payment Method service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.PaymentMethodExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.GetPaymentMethods(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.GetPaymentMethods(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.GetPaymentMethodsAllowedIn(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities allowed in the given <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/>
            </summary>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities should be allowed in</param>
            <param name="regionId">The ID of the <see cref="T:Vendr.Core.Models.Region"/> the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities should be allowed in</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.GetPaymentMethod(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.GetPaymentMethod(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.PaymentMethodReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.SavePaymentMethod(Vendr.Core.Models.PaymentMethod)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.PaymentMethod"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.PaymentMethod"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.DeletePaymentMethod(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.PaymentMethod"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.PaymentMethod"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.DeletePaymentMethod(Vendr.Core.Models.PaymentMethod)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.PaymentMethod"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.PaymentMethod"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IPaymentMethodService.SortPaymentMethods(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.PaymentMethod"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.PaymentMethod"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IPriceFreezerService">
            <summary>
            Defines the Vendr Price Freezer service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IPriceFreezerService.FreezePrice(System.Guid,System.String,Vendr.Core.Models.FreezablePrice)">
            <summary>
            Freezes the given price
            </summary>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="key">The key to assign the frozen price to</param>
            <param name="price">The price to freeze</param>
        </member>
        <member name="M:Vendr.Core.Services.IPriceFreezerService.GetFrozenPrice(System.Guid,System.String,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a frozen prices that matches the given criteria
            </summary>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="key">The key or partial key of the frozen price</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the frozen price</param>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> of the frozen price</param>
            <param name="regiondId">The ID of the <see cref="T:Vendr.Core.Models.Region"/> of the frozen price</param>
            <returns></returns>
        </member>
        <member name="M:Vendr.Core.Services.IPriceFreezerService.ThawPrices(System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.DateTime})">
            <summary>
            Thaws any frozen prices that match the given criteria
            </summary>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the prices are associated with</param>
            <param name="partialKey">A partial key of the frozen prices</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the frozen prices</param>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> of the frozen prices</param>
            <param name="regiondId">The ID of the <see cref="T:Vendr.Core.Models.Region"/> of the frozen price</param>
            <param name="olderThan">A Date representing the maximum age of the frozen prices</param>
        </member>
        <member name="T:Vendr.Core.Services.IPrintTemplateService">
            <summary>
            Defines the Vendr Print Template service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.PrintTemplateExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.GetPrintTemplates(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.GetPrintTemplates(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.GetPrintTemplate(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.GetPrintTemplate(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.PrintTemplateReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.SavePrintTemplate(Vendr.Core.Models.PrintTemplate)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.PrintTemplate"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.PrintTemplate"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.DeletePrintTemplate(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.PrintTemplate"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.PrintTemplate"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.DeletePrintTemplate(Vendr.Core.Models.PrintTemplate)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.PrintTemplate"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.PrintTemplate"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IPrintTemplateService.SortPrintTemplates(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.PrintTemplate"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.PrintTemplate"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IProductAttributeService">
            <summary>
            Defines the Vendr Order Status service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.ProductAttributeExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttributes(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttributes(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttribute(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttribute(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductAttributeReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.SaveProductAttribute(Vendr.Core.Models.ProductAttribute)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.ProductAttribute"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ProductAttribute"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.DeleteProductAttribute(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ProductAttribute"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ProductAttribute"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.DeleteProductAttribute(Vendr.Core.Models.ProductAttribute)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ProductAttribute"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ProductAttribute"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.SortProductAttributes(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.ProductAttribute"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.ProductAttribute"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.ProductAttributePresetExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttributePresets(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttributePresets(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttributePreset(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.GetProductAttributePreset(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductAttributePresetReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.SaveProductAttributePreset(Vendr.Core.Models.ProductAttributePreset)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.ProductAttributePreset"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ProductAttributePreset"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.DeleteProductAttributePreset(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ProductAttributePreset"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ProductAttributePreset"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.DeleteProductAttributePreset(Vendr.Core.Models.ProductAttributePreset)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ProductAttributePreset"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ProductAttributePreset"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductAttributeService.SortProductAttributePresets(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.ProductAttributePreset"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.ProductAttributePreset"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.IProductPriceFreezerService">
            <summary>
            Defines the Vendr Product Price Freezer service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.HasFrozenProductPrice(System.Guid,System.Guid,System.String,System.Guid)">
            <summary>
            Checks to see if there is a frozen product price for the given reference
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price to freeze</param>
            <returns>True if a frozen price exists, otherwise false</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.HasFrozenProductPrice(System.Guid,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Checks to see if there is a frozen product price for the given reference
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="productVariantReference">The unique reference of the Product variant the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price to freeze</param>
            <returns>True if a frozen price exists, otherwise false</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.GetProductPrice(System.Guid,System.Guid,System.String,System.Guid)">
            <summary>
            Get the price of a product, either frozen if one exists, otherwise direct from the product source
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price to freeze</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductPrice" /></returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.GetProductPrice(System.Guid,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Get the price of a product, either frozen if one exists, otherwise direct from the product source
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="productVariantReference">The unique reference of the Product variant the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price to freeze</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductPrice" /></returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.GetProductPrice(System.Guid,System.Guid,System.String,System.Guid,System.Boolean@)">
            <summary>
            Get the price of a product, either frozen if one exists, otherwise direct from the product source
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price to freeze</param>
            <param name="isFrozen">Boolean indicating if the price returned is a frozen price or not</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductPrice" /></returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.GetProductPrice(System.Guid,System.Guid,System.String,System.String,System.Guid,System.Boolean@)">
            <summary>
            Get the price of a product, either frozen if one exists, otherwise direct from the product source
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="productVariantReference">The unique reference of the Product variant the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price to freeze</param>
            <param name="isFrozen">Boolean indicating if the price returned is a frozen price or not</param>
            <returns>A <see cref="T:Vendr.Core.Models.ProductPrice" /></returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.FreezeProductPrice(System.Guid,System.Guid,System.String,Vendr.Core.Models.ProductPrice)">
            <summary>
            Freezes a products price
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="price">The <see cref="T:Vendr.Core.Models.ProductPrice"/> to freeze</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.FreezeProductPrice(System.Guid,System.Guid,System.String,System.String,Vendr.Core.Models.ProductPrice)">
            <summary>
            Freezes a products price
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="productVariantReference">The unique reference of the Product variant the price is associated with</param>
            <param name="price">The <see cref="T:Vendr.Core.Models.ProductPrice"/> to freeze</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.GetOrCreateFrozenProductPrice(System.Guid,System.Guid,System.String,System.Guid)">
            <summary>
            Get or creates a frozen price for a given product
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
            <returns>A frozen <see cref="T:Vendr.Core.Models.ProductPrice" /></returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.GetOrCreateFrozenProductPrice(System.Guid,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Get or creates a frozen price for a given product
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="productVariantReference">The unique reference of the Product variant the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
            <returns>A frozen <see cref="T:Vendr.Core.Models.ProductPrice" /></returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.ThawFrozenProductPrice(System.Guid,System.Guid,System.String,System.Guid)">
            <summary>
            Thaws a frozen price for a given product
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductPriceFreezerService.ThawFrozenProductPrice(System.Guid,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Thaws a frozen price for a given product
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the price is associated with</param>
            <param name="orderId">The ID of the <see cref="T:Vendr.Core.Models.Order"/> the price is associated with</param>
            <param name="productReference">The unique reference of the Product the price is associated with</param>
            <param name="productVariantReference">The unique reference of the Product variant the price is associated with</param>
            <param name="currencyId">The ID of the <see cref="T:Vendr.Core.Models.Currency"/> of the price</param>
        </member>
        <member name="T:Vendr.Core.Services.IProductService">
            <summary>
            Defines the Vendr Product service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.GetProduct(System.String,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.IProductSnapshot"/> of a given product
            </summary>
            <param name="productReference">The unique reference of the product to snapshot</param>
            <param name="languageIsoCode">The ISO Code of the language of the snapshot to create</param>
            <returns>An <see cref="T:Vendr.Core.Models.IProductSnapshot"/> of the given product</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.GetProduct(System.String,System.String,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.IProductSnapshot"/> of a given product
            </summary>
            <param name="productReference">The unique reference of the product to snapshot</param>
            <param name="productVariantReference">The unique reference of the variant of the product to snapshot</param>
            <param name="languageIsoCode">The ISO Code of the language of the snapshot to create</param>
            <returns>An <see cref="T:Vendr.Core.Models.IProductSnapshot"/> of the given product</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.GetProductStock(System.String)">
            <summary>
            Gets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <returns>The stock level of the product</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TryGetProductStock(System.String,System.Nullable{System.Decimal}@)">
            <summary>
            Try to get the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="stock">The output stock level of the product</param>
            <returns>True if the stock level was retrieved, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.GetProductStock(System.String,System.String)">
            <summary>
            Gets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to retrieve</param>
            <returns>The stock level of the product</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TryGetProductStock(System.String,System.String,System.Nullable{System.Decimal}@)">
            <summary>
            Try to get the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to retrieve</param>
            <param name="stock">The output stock level of the product</param>
            <returns>True if the stock level was retrieved, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.SetProductStock(System.String,System.Decimal)">
            <summary>
            Sets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to set</param>
            <param name="value">The value to set the stock level to</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TrySetProductStock(System.String,System.Decimal)">
            <summary>
            Try to set the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="value">The value to set the stock level to</param>
            <returns>True if the stock level was set, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.SetProductStock(System.String,System.String,System.Decimal)">
            <summary>
            Sets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to set</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to set</param>
            <param name="value">The value to set the stock level to</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TrySetProductStock(System.String,System.String,System.Decimal)">
            <summary>
            Try to set the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to set</param>
            <param name="value">The value to set the stock level to</param>
            <returns>True if the stock level was set, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.ReduceProductStock(System.String,System.Decimal)">
            <summary>
            Reduces the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to reduce</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TryReduceProductStock(System.String,System.Decimal)">
            <summary>
            Try to reduce the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
            <returns>True if the stock level was reduced, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.ReduceProductStock(System.String,System.String,System.Decimal)">
            <summary>
            Reduces the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to reduce</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to reduce</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TryReduceProductStock(System.String,System.String,System.Decimal)">
            <summary>
            Try to reduce the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to reduce</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
            <returns>True if the stock level was reduced, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.IncreaseProductStock(System.String,System.Decimal)">
            <summary>
            Increases the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to increase</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TryIncreaseProductStock(System.String,System.Decimal)">
            <summary>
            Try to increase the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
            <returns>True if the stock level was increased, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.IncreaseProductStock(System.String,System.String,System.Decimal)">
            <summary>
            Increases the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to increase</param>
            <param name="productVariantReference">The unique reference of variant of the product who's stock level to increase</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IProductService.TryIncreaseProductStock(System.String,System.String,System.Decimal)">
            <summary>
            Try to increase the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of variant of the product who's stock level to increase</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
            <returns>True if the stock level was increased, false if not</returns>
        </member>
        <member name="T:Vendr.Core.Services.IService">
            <summary>
            Marker interface for services
            </summary>
        </member>
        <member name="T:Vendr.Core.Services.IShippingMethodService">
            <summary>
            Defines the Vendr Shipping Method service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.ShippingMethodExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.GetShippingMethods(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.GetShippingMethods(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.GetShippingMethodsAllowedIn(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities allowed in the given <see cref="T:Vendr.Core.Models.Country"/> and <see cref="T:Vendr.Core.Models.Region"/>
            </summary>
            <param name="countryId">The ID of the <see cref="T:Vendr.Core.Models.Country"/> the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities should be allowed in</param>
            <param name="regionId">The ID of the <see cref="T:Vendr.Core.Models.Region"/> the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities should be allowed in</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.GetShippingMethod(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.GetShippingMethod(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.ShippingMethodReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.SaveShippingMethod(Vendr.Core.Models.ShippingMethod)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.ShippingMethod"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ShippingMethod"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.DeleteShippingMethod(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ShippingMethod"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.ShippingMethod"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.DeleteShippingMethod(Vendr.Core.Models.ShippingMethod)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.ShippingMethod"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.ShippingMethod"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IShippingMethodService.SortShippingMethods(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.ShippingMethod"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.ShippingMethod"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.GetStock(System.String)">
            <summary>
            Gets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <returns>The stock level of the product</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TryGetStock(System.String,System.Nullable{System.Decimal}@)">
            <summary>
            Trys to get the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="stock">The stock level of the product</param>
            <returns>True if the stock level was retrieved, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.GetStock(System.String,System.String)">
            <summary>
            Gets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to retrieve</param>
            <returns>The stock level of the product</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TryGetStock(System.String,System.String,System.Nullable{System.Decimal}@)">
            <summary>
            Trys to get the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to retrieve</param>
            <param name="stock">The stock level of the product</param>
            <returns>True if the stock level was retrieved, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.SetStock(System.String,System.Decimal)">
            <summary>
            Sets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to set</param>
            <param name="value">The value to set the stock level to</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TrySetStock(System.String,System.Decimal)">
            <summary>
            Trys to set the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="value">The value to set the stock level to</param>
            <returns>True if the stock level was set, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.SetStock(System.String,System.String,System.Decimal)">
            <summary>
            Sets the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to set</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to set</param>
            <param name="value">The value to set the stock level to</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TrySetStock(System.String,System.String,System.Decimal)">
            <summary>
            Trys to set the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to set</param>
            <param name="value">The value to set the stock level to</param>
            <returns>True if the stock level was set, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.ReduceStock(System.String,System.Decimal)">
            <summary>
            Reduces the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to reduce</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TryReduceStock(System.String,System.Decimal)">
            <summary>
            Trys to reduce the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
            <returns>True if the stock level was reduced, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.ReduceStock(System.String,System.String,System.Decimal)">
            <summary>
            Reduces the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to reduce</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to reduce</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TryReduceStock(System.String,System.String,System.Decimal)">
            <summary>
            Trys to reduce the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of the variant of the product who's stock level to reduce</param>
            <param name="reduceBy">The amount to reduce the stock level by</param>
            <returns>True if the stock level was reduced, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.IncreaseStock(System.String,System.Decimal)">
            <summary>
            Increases the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to increase</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TryIncreaseStock(System.String,System.Decimal)">
            <summary>
            Trys to increase the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
            <returns>True if the stock level was increased, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.IncreaseStock(System.String,System.String,System.Decimal)">
            <summary>
            Increases the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to increase</param>
            <param name="productVariantReference">The unique reference of variant of the product who's stock level to increase</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.TryIncreaseStock(System.String,System.String,System.Decimal)">
            <summary>
            Trys to increase the stock level of a given product
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to retrieve</param>
            <param name="productVariantReference">The unique reference of variant of the product who's stock level to increase</param>
            <param name="increaseBy">The amount to increase the stock level by</param>
            <returns>True if the stock level was increased, false if not</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.InvalidateStockCache(System.String,System.String)">
            <summary>
            Invalidates the stock cache for the given product / product variant
            </summary>
            <param name="productReference">The unique reference of the product who's stock level to increase</param>
            <param name="productVariantReference">The unique reference of variant of the product who's stock level to increase</param>
        </member>
        <member name="M:Vendr.Core.Services.IStockService.InvalidateStockCache">
            <summary>
            Invalidate the whole stock cache
            </summary>
        </member>
        <member name="T:Vendr.Core.Services.IStoreService">
            <summary>
            Define the Vendr Store service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.StoreExists(System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.StoreReadOnly"/> exists with the given Alias
            </summary>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.StoreReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.GetStores">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entities
            </summary>
            <returns>A list of <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.GetStores(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.GetStore(System.Guid)">
            <summary>
            Get an <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity to fetch</param>
            <returns>An <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.GetStore(System.String)">
            <summary>
            Get an <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity by Alias
            </summary>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity to fetch</param>
            <returns>An <see cref="T:Vendr.Core.Models.StoreReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.SaveStore(Vendr.Core.Models.Store)">
            <summary>
            Saves an <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Store"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.DeleteStore(System.Guid)">
            <summary>
            Deletes an <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.Store"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.DeleteStore(Vendr.Core.Models.Store)">
            <summary>
            Deletes an <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.Store"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.IStoreService.SortStores(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.Store"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.Store"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.ITaxService">
            <summary>
            Defines the Vendr Tax service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.TaxClassExists(System.Guid,System.String)">
            <summary>
            Check to see if a <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> exists in the given <see cref="T:Vendr.Core.Models.Store"/> with the given Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity to check</param>
            <returns>Returns <see langword="true"/> if the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> exists, otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.GetTaxClasses(System.Guid)">
            <summary>
            Get a list of all <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entities from the given <see cref="T:Vendr.Core.Models.Store"/>
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entities belong to</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.GetTaxClasses(System.Guid[])">
            <summary>
            Get a list of <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entities with the given IDs
            </summary>
            <param name="ids">The IDs of the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entities to fetch</param>
            <returns>A list of <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entities</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.GetTaxClass(System.Guid)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity by ID
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.GetTaxClass(System.Guid,System.String)">
            <summary>
            Get a <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity by <see cref="T:Vendr.Core.Models.Store"/> and Alias
            </summary>
            <param name="storeId">The ID of the <see cref="T:Vendr.Core.Models.Store"/> the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity belongs to</param>
            <param name="alias">The Alias of the <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity to fetch</param>
            <returns>A <see cref="T:Vendr.Core.Models.TaxClassReadOnly"/> entity</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.SaveTaxClass(Vendr.Core.Models.TaxClass)">
            <summary>
            Saves a <see cref="T:Vendr.Core.Models.TaxClass"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.TaxClass"/> to save</param>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.DeleteTaxClass(System.Guid)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.TaxClass"/>
            </summary>
            <param name="id">The ID of the <see cref="T:Vendr.Core.Models.TaxClass"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.DeleteTaxClass(Vendr.Core.Models.TaxClass)">
            <summary>
            Deletes a <see cref="T:Vendr.Core.Models.TaxClass"/>
            </summary>
            <param name="entity">The <see cref="T:Vendr.Core.Models.TaxClass"/> to delete</param>
        </member>
        <member name="M:Vendr.Core.Services.ITaxService.SortTaxClasses(System.Guid[])">
            <summary>
            Sorts a list of <see cref="T:Vendr.Core.Models.TaxClass"/> entities by ID according to the order of those IDs
            </summary>
            <param name="sortedIds">The IDs of the <see cref="T:Vendr.Core.Models.TaxClass"/> entities to sort, in the order by which to sort them</param>
        </member>
        <member name="T:Vendr.Core.Services.ITranslationService">
            <summary>
            Defines the Vendr Translation service
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.ITranslationService.TranslateValue(System.Object,System.String)">
            <summary>
            Translates a value to the given language
            </summary>
            <param name="value">The value to attempt to translate</param>
            <param name="languageIsoCode">The ISO Code of the language to attempt to translate to</param>
            <returns>The translated value, or the original value if a translation was unsuccessful</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITranslationService.TranslateValue(System.Object,System.String,System.String@)">
            <summary>
            Translates a value to the given language
            </summary>
            <param name="value">The value to attempt to translate</param>
            <param name="languageIsoCode">The ISO Code of the language to attempt to translate to</param>
            <param name="usedLanguageIsoCode">The ISO Code of the language that was used for the translation as it could differ from the requested language if a fallback language is in place</param>
            <returns>The translated value, or the original value if a translation was unsuccessful</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITranslationService.TranslateValues(System.Collections.Generic.IEnumerable{System.Object},System.String)">
            <summary>
            Translates a series of values to the given language
            </summary>
            <param name="values">The values to attempt to translate</param>
            <param name="languageIsoCode">The ISO Code of the language to attempt to translate to</param>
            <returns>A list of translated value, or the original value if a translation was unsuccessful</returns>
        </member>
        <member name="M:Vendr.Core.Services.ITranslationService.TranslateValues(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String)">
            <summary>
            Translate a series of dictionary values to the given language
            </summary>
            <param name="values">The values to attempt to translate</param>
            <param name="languageIsoCode">The ISO Code of the language to attempt to translate to</param>
            <returns>A dictionary of translated values, or the original value if a translation was unsuccessful</returns>
        </member>
        <member name="T:Vendr.Core.Services.VendrServiceContext">
            <summary>
            A central service context for easy access to all of Vendr's services
            </summary>
        </member>
        <member name="M:Vendr.Core.Services.VendrServiceContext.#ctor(System.Lazy{Vendr.Core.Services.ICountryService},System.Lazy{Vendr.Core.Services.ICurrencyService},System.Lazy{Vendr.Core.Services.IEmailTemplateService},System.Lazy{Vendr.Core.Services.IPrintTemplateService},System.Lazy{Vendr.Core.Services.IExportTemplateService},System.Lazy{Vendr.Core.Services.IOrderService},System.Lazy{Vendr.Core.Services.IOrderStatusService},System.Lazy{Vendr.Core.Services.IPaymentMethodService},System.Lazy{Vendr.Core.Services.IPaymentService},System.Lazy{Vendr.Core.Services.IPaymentProviderService},System.Lazy{Vendr.Core.Services.IShippingMethodService},System.Lazy{Vendr.Core.Services.IStoreService},System.Lazy{Vendr.Core.Services.ITaxService},System.Lazy{Vendr.Core.Services.IProductService},System.Lazy{Vendr.Core.Services.IDiscountService},System.Lazy{Vendr.Core.Services.IGiftCardService},System.Lazy{Vendr.Core.Services.ITranslationService},System.Lazy{Vendr.Core.Services.IProductAttributeService},System.Lazy{Vendr.Core.Services.IEntityService},System.Lazy{Vendr.Core.Services.IActivityLogService},System.Lazy{Vendr.Core.Services.IAnalyticsService},System.Lazy{Vendr.Core.Licensing.LicensingService},System.Lazy{Vendr.Core.Services.IRegisteredCustomerInfoService})">
            <summary>
            Instantiates a new VendrServiceContext instance
            </summary>
            <param name="countryService"></param>
            <param name="currencyService"></param>
            <param name="emailTemplateService"></param>
            <param name="printTemplateService"></param>
            <param name="exportTemplateService"></param>
            <param name="orderService"></param>
            <param name="orderStatusService"></param>
            <param name="paymentMethodService"></param>
            <param name="paymentService"></param>
            <param name="paymentProviderService"></param>
            <param name="shippingMethodService"></param>
            <param name="storeService"></param>
            <param name="taxService"></param>
            <param name="productService"></param>
            <param name="discountService"></param>
            <param name="giftCardService"></param>
            <param name="translationService"></param>
            <param name="productAttributeService"></param>
            <param name="entityService"></param>
            <param name="activityLogService"></param>
            <param name="analyticsService"></param>
            <param name="licensingService"></param>
            <param name="registeredCustomerInfoService"></param>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.CountryService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.ICountryService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.CurrencyService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.ICurrencyService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.EmailTemplateService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IEmailTemplateService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.PrintTemplateService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IPrintTemplateService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.ExportTemplateService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IExportTemplateService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.OrderService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IOrderService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.OrderStatusService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IOrderStatusService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.PaymentMethodService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IPaymentMethodService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.PaymentService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IPaymentService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.PaymentProviderService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IPaymentProviderService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.ShippingMethodService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IShippingMethodService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.StoreService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IStoreService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.TaxService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.ITaxService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.ProductService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IProductService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.DiscountService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IDiscountService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.GiftCardService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IGiftCardService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.TranslationService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.ITranslationService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.ProductAttributeService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IProductAttributeService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.EntityService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IEntityService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.ActivityLogService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IActivityLogService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.AnalyticsService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IAnalyticsService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.LicensingService">
            <summary>
            Gets the <see cref="P:Vendr.Core.Services.VendrServiceContext.LicensingService"/>
            </summary>
        </member>
        <member name="P:Vendr.Core.Services.VendrServiceContext.RegisteredCustomerInfoService">
            <summary>
            Gets the <see cref="T:Vendr.Core.Services.IRegisteredCustomerInfoService"/>
            </summary>
        </member>
        <member name="T:Vendr.Extensions.DictionaryExtensions">
            <summary>
            Dictionary extension methods
            </summary>
        </member>
        <member name="T:Vendr.Extensions.EnumerableExtensions">
            <summary>
             Extensions for enumerable sources
            </summary>
        </member>
        <member name="T:Vendr.Extensions.AdjustedPriceExtensions">
            <summary>
            Extensions methods for <see cref="!:DiscountedPrice"/> entities
            </summary>
        </member>
        <member name="M:Vendr.Extensions.AdjustedPriceExtensions.Formatted(Vendr.Core.Models.AdjustedPrice)">
            <summary>
            Formats the <see cref="T:Vendr.Core.Models.AdjustedPrice"/> value for the given prices <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
            <param price="value">The <see cref="T:Vendr.Core.Models.AdjustedPrice"/> to format</param>
            <returns>A <see cref="T:Vendr.Core.Models.FormattedAmount"/> instance</returns>
        </member>
        <member name="T:Vendr.Extensions.IAmountExtensions">
            <summary>
            Extensions methods for <see cref="T:Vendr.Core.Models.IAmount"/> entities
            </summary>
        </member>
        <member name="M:Vendr.Extensions.IAmountExtensions.Formatted(Vendr.Core.Models.IAmount)">
            <summary>
            Formats the <see cref="T:Vendr.Core.Models.IAmount"/> value for the given amounts <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
            <param name="value">The <see cref="T:Vendr.Core.Models.IAmount"/> to format</param>
            <returns>A <see cref="T:Vendr.Core.Models.FormattedAmount"/> instance</returns>
        </member>
        <member name="T:Vendr.Extensions.OrderExtensions">
            <summary>
            Extension methods for a Vendr Order
            </summary>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.Decimal)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.String,System.Decimal)">
            <summary>
            Adds a product variant to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.Decimal,System.String)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.String,System.Decimal,System.String)">
            <summary>
            Adds a product variant to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a product variant to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Adds a product variant to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.Decimal)">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.String,System.Decimal)">
            <summary>
            Adds a product variant to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.Decimal,System.String)">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.String,System.Decimal,System.String)">
            <summary>
            Adds a product variant to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a product variant to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,System.String,System.String,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Adds a product variant to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productReference">The unique reference of the product</param>
            <param name="productVariantReference">The unique reference of the product variant</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,Vendr.Core.Models.IProductSnapshot,System.Decimal)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,Vendr.Core.Models.IProductSnapshot,System.Decimal,System.String)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,Vendr.Core.Models.IProductSnapshot,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProduct(Vendr.Core.Models.Order,Vendr.Core.Models.IProductSnapshot,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Adds a product to the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,Vendr.Core.Models.IProductSnapshot,System.Decimal)">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,Vendr.Core.Models.IProductSnapshot,System.Decimal,System.String)">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,Vendr.Core.Models.IProductSnapshot,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.AddProductToBundle(Vendr.Core.Models.Order,System.String,Vendr.Core.Models.IProductSnapshot,System.Decimal,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Adds a product to a bundle in the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="parentBundleId">The bundle ID of an existing bundle order line to assign the product order line to as a bundle item</param>
            <param name="productSnapshot">A snapshot of the product to add</param>
            <param name="qty">The quantity of the product to add to the order</param>
            <param name="properties">A collection of properties to assign to the product order line</param>
            <param name="bundleId">A bundle ID to assign to the product order line to identify it as a bundle</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.InitializeTransaction(Vendr.Core.Models.Order)">
            <summary>
            Initializes a transaction ready to send to the payment gateway
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.FinalizeOrUpdateTransaction(Vendr.Core.Models.Order,System.Decimal,System.String,Vendr.Core.Models.PaymentStatus)">
            <summary>
            Finalizes or updates the transaction info of the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="amountAuthorized">The amount authorized by the payment gateway</param>
            <param name="transactionId">The ID of the transaction from the payment gateway</param>
            <param name="paymentStatus">The status of the payment</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.FinalizeOrUpdateTransaction(Vendr.Core.Models.Order,System.Decimal,System.Decimal,System.String,Vendr.Core.Models.PaymentStatus)">
            <summary>
            Finalizes or updates the transaction info of the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="amountAuthorized">The amount authorized by the payment gateway</param>
            <param name="transactionFee">The transaction fee charged by the payment gateway</param>
            <param name="transactionId">The ID of the transaction from the payment gateway</param>
            <param name="paymentStatus">The status of the payment</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.Redeem(Vendr.Core.Models.Order,System.String)">
            <summary>
            Redeems a <see cref="T:Vendr.Core.Models.Discount"/> or <see cref="T:Vendr.Core.Models.GiftCard"/> against the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="discountOrGiftCardCode">The <see cref="T:Vendr.Core.Models.Discount"/> or <see cref="T:Vendr.Core.Models.GiftCard"/> code</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.Recalculate(Vendr.Core.Models.Order)">
            <summary>
            Recalculates the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.Recalculate(Vendr.Core.Models.Order,System.Boolean)">
            <summary>
            Recalculates the order
            </summary>
            <param name="order">The <see cref="T:Vendr.Core.Models.Order"/> instance</param>
            <param name="force">A boolean flag indicating whether to force recalculation whether the order needs recalculating or not</param>
            <returns>The updated <see cref="T:Vendr.Core.Models.Order"/> entity</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.GetTotalPriceAdjustmentByType``1(Vendr.Core.Models.OrderReadOnly)">
            <summary>
            Gets the total price adjustment for a given price adjustment type
            </summary>
            <typeparam name="T">The type of the price adjustment</typeparam>
            <param name="order">The order to fetch the price adjustments from</param>
            <returns>The price of the price adjustments</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.GetTotalPriceAdjustmentWhere(Vendr.Core.Models.OrderReadOnly,System.Func{Vendr.Core.Models.PriceAdjustment,System.Boolean})">
            <summary>
            Gets the total price adjustment where price adjustments match the supplied predicate
            </summary>
            <param name="order">The order to fetch the price adjustments from</param>
            <param name="predicate">The predicate function to include/exclude the price adjustment</param>
            <returns>The price of the price adjustments</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.GetTotalAmountAdjustmentByType``1(Vendr.Core.Models.OrderReadOnly)">
            <summary>
            Gets the total amount adjustment for a given amount adjustment type
            </summary> 
            <typeparam name="T">The type of the amount adjustment</typeparam>
            <param name="order">The order to fetch the amount adjustments from</param>
            <returns>The amount of the amount adjustments</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.GetTotalAmountAdjustmentWhere(Vendr.Core.Models.OrderReadOnly,System.Func{Vendr.Core.Models.AmountAdjustment,System.Boolean})">
            <summary>
            Gets the total amount adjustment where amount adjustments match the supplied predicate
            </summary>
            <param name="order">The order to fetch the amount adjustments from</param>
            <param name="predicate">The predicate function to include/exclude the amount adjustment</param>
            <returns>The amount of the amount adjustments</returns>
        </member>
        <member name="M:Vendr.Extensions.OrderExtensions.ApplyPaymentChanges(Vendr.Core.Models.Order,Vendr.Core.Models.PaymentResult)">
            <summary>
            Applies the changes from a Payment Result to an order
            </summary>
            <param name="order">The order to update</param>
            <param name="result">The payment result changes to apply</param>
            <returns>The updated order</returns>
        </member>
        <member name="T:Vendr.Extensions.PriceExtensions">
            <summary>
            Extensions methods for <see cref="T:Vendr.Core.Models.IPrice"/> entities
            </summary>
        </member>
        <member name="M:Vendr.Extensions.PriceExtensions.Formatted(Vendr.Core.Models.IPrice)">
            <summary>
            Formats the <see cref="T:Vendr.Core.Models.IPrice"/> values for the given prices <see cref="T:Vendr.Core.Models.Currency"/>
            </summary>
            <param name="value">The <see cref="T:Vendr.Core.Models.IPrice"/> to format</param>
            <returns>A <see cref="T:Vendr.Core.Models.FormattedPrice"/> instance</returns>
        </member>
        <member name="T:Vendr.Extensions.IProductServiceExtensions">
            <summary>
            Extension methods for the Vendr Product service
            </summary>
        </member>
        <member name="T:Vendr.Extensions.ITranslationServiceExtensions">
            <summary>
            Extension methods for the Vendr Translation service
            </summary>
        </member>
        <member name="M:Vendr.Extensions.ITranslationServiceExtensions.TranslateValues(Vendr.Core.Services.ITranslationService,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Translates a series of values to the given language
            </summary>
            <param name="translationService">The <see cref="T:Vendr.Core.Services.ITranslationService"/> instance</param>
            <param name="values">The values to attempt to translate</param>
            <param name="languageIsoCode">The ISO Code of the language to attempt to translate to</param>
            <returns>A list of translated value, or the original value if a translation was unsuccessful</returns>
        </member>
        <member name="M:Vendr.Extensions.ITranslationServiceExtensions.TranslateValues(Vendr.Core.Services.ITranslationService,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
            Translate a series of dictionary values to the given language
            </summary>
            <param name="translationService">The <see cref="T:Vendr.Core.Services.ITranslationService"/> instance</param>
            <param name="values">The values to attempt to translate</param>
            <param name="languageIsoCode">The ISO Code of the language to attempt to translate to</param>
            <returns>A dictionary of translated values, or the original value if a translation was unsuccessful</returns>
        </member>
    </members>
</doc>
